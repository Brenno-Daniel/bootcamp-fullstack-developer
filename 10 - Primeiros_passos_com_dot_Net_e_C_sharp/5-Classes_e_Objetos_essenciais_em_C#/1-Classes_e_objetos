O que são classes e objetos em C#

Objetivos da aula:

1. Classes e Objetos.

Classes são os tipos mais fundamentais de C#.

Um classe  é uma estrutura de dados que combina estado (campos/propriedades) e ações (métodos).

Objetos são instâncias de uma classe.

As classes suportam herança e polimorfismo, mecanismos pelo quais as classes deviradas podem estender e especializar as classes base.

Exemplo classe Ponto e método construtor Ponto:

public class Ponto
{
	public int x, y;
	public Ponto(int x, int y)
	{
		this.x = x;
		this.y = y;
	}
}


Instâncias de classes (objetos) são criadas usando o operador new, que aloca memória para uma nova instância, chama um construtor para inicializar a instÂncia e retorna uma referencia à instância.

Ponto p1 = new Ponto(0, 0);
Ponto p2 = new Ponto(10, 20);


A memória ocupada por um objeto é recuperada automaticamente quando o objeto não está mais acessível. Não é necessário nem possível desalocar explicitamente objetos em C#.

Membros:

Os membros de uma classe podem ser estáticos ou membros da instância.

Membros estáticos pertencem a classe e membros de instância pertencem ao objeto.

Constantes, variáveis, métodos, propriedades, construtores, etc ...

Acessibilidade:

Cada membro de uma classe tem uma acessibilidade associada, que controla as regiões do texto do programa que podem acessar o membro.

Podem ser:

- public: qualquer parte do código pode acessá-lo.

- protected: apenas as classes que herdam ela tem acesso à esse método.

- internal: só é acessado de dentro do assembly que ele faz parte.

- private: acesso unica e exclusivamente dentro da classe em que esta contido.


Herança:

Uma declaração de classe pode especificar uma classe base, herdando os membros public, internal e protected da classe base.

Omitir uma especificação de classe base é o mesmo que derivar do tipo object.


Métodos:

Um método é um membro que implementa uma computação ou ação que pode ser executada por um objeto ou classe.

Boa pratica = colocar nome de classe como verbo, pois indica ação, e as propriedades que sejam como substantivo.**

Os métodos podem ter uma lista de parâmetros, que representam valores ou referências de variáveis passados para o método, e um tipo de retorno, que especifica o tipo do valor calculado e retornado pelo método.



Erros do questionário:

Um membro internal pode ser acessado por qualquer parte do código. Sobre esta afirmação:

Ela está correta em partes, pois o internal só pode ser acessado por classes do seu proprio assembly.


Sobre métodos estáticos é correto afirmar:

Todas as alternativas estão corretas.


